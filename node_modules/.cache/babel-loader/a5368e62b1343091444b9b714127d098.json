{"ast":null,"code":"var _jsxFileName = \"/Users/nikitarukoleev/Desktop/app-weather/src/components/Main/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Main.scss';\nimport { TemperContext } from '../../App'; // export default function Main({ viewDataWeatherCity, dataWeatherCity }) {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main(_ref) {\n  _s();\n\n  let {\n    dataWeatherCity\n  } = _ref;\n  const tempFormat = React.useContext(TemperContext); // для иконки openweathermap.org/img/wn/${data.weather.icon}@2x.png \n\n  const [link, setLink] = React.useState('');\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"Main\",\n    children: dataWeatherCity !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main__data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Main__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://openweathermap.org/img/wn/${dataWeatherCity.weather[0].icon}@4x.png`,\n          alt: \"img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), tempFormat ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Main__data-temper\",\n          children: [parseInt(dataWeatherCity.main.temp), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Main__data-temper\",\n          children: parseInt(dataWeatherCity.main.temp * 1.8 + 32)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Main__data-description\",\n        children: dataWeatherCity.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u043D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u043E \\u0432\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0433\\u043E\\u0440\\u043E\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"yLtLr6St81WT+AfKnEFmMWP/wG8=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/nikitarukoleev/Desktop/app-weather/src/components/Main/Main.jsx"],"names":["React","TemperContext","Main","dataWeatherCity","tempFormat","useContext","link","setLink","useState","undefined","weather","icon","parseInt","main","temp","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,aAAP;AAEA,SAAQC,aAAR,QAA4B,WAA5B,C,CAEA;;;AACA,eAAe,SAASC,IAAT,OAAmC;AAAA;;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AAE9C,QAAMC,UAAU,GAAGJ,KAAK,CAACK,UAAN,CAAiBJ,aAAjB,CAAnB,CAF8C,CAI9C;;AAEA,QAAM,CAAEK,IAAF,EAAQC,OAAR,IAAmBP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAzB;AAEA,sBACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,cAEML,eAAe,KAAKM,SAApB,gBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAG,oCAAmCN,eAAe,CAACO,OAAhB,CAAwB,CAAxB,EAA2BC,IAAK,SAA9E;AAAwF,UAAA,GAAG,EAAC;AAA5F;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGQP,UAAU,gBACN;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,qBAAoCQ,QAAQ,CAACT,eAAe,CAACU,IAAhB,CAAqBC,IAAtB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADM,gBAGN;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,oBAAoCF,QAAQ,CAAET,eAAe,CAACU,IAAhB,CAAqBC,IAArB,GAA0B,GAA3B,GAAgC,EAAjC;AAA5C;AAAA;AAAA;AAAA;AAAA,gBANZ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,kBAAyCX,eAAe,CAACO,OAAhB,CAAwB,CAAxB,EAA2BK;AAApE;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,gBAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBR;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA7BuBb,I;;KAAAA,I","sourcesContent":["import React from 'react';\n\nimport './Main.scss';\n\nimport {TemperContext} from '../../App';\n\n// export default function Main({ viewDataWeatherCity, dataWeatherCity }) {\nexport default function Main({ dataWeatherCity }) {\n\n    const tempFormat = React.useContext(TemperContext);\n\n    // для иконки openweathermap.org/img/wn/${data.weather.icon}@2x.png \n\n    const [ link, setLink ]= React.useState('');\n    \n    return (\n        <main className=\"Main\">\n            {/* { viewDataWeatherCity ?  */}\n            { dataWeatherCity !== undefined ? \n                <div className=\"Main__data\">\n                    <div className='Main__wrapper'>\n                        <img src={`http://openweathermap.org/img/wn/${dataWeatherCity.weather[0].icon}@4x.png`} alt=\"img\"/>\n                        {\n                            tempFormat ? \n                                <div className=\"Main__data-temper\">{parseInt(dataWeatherCity.main.temp)}&deg;</div> \n                            : \n                                <div className=\"Main__data-temper\">{parseInt((dataWeatherCity.main.temp*1.8)+32)}</div> \n                        }   \n                    </div>\n                    <div className=\"Main__data-description\">{dataWeatherCity.weather[0].description}</div>       \n                </div>\n                :\n                <div>необходимо выбрать город</div>\n            }\n        </main>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}