{"ast":null,"code":"var _jsxFileName = \"/Users/nikitarukoleev/Desktop/app-weather/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport arrayItemsCities from './arrayItemsCities.json';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = React.useState([]);\n  const [searchValue, setSearchValue] = React.useState('');\n  const filtredItemsArrayCities = arrayItemsCities.filter(item => item.hasOwnProperty('city'));\n\n  const searchItem = (filtredItemsArrayCities, searchValue) => {\n    let arr = [];\n    if (searchValue.length === 0) return filtredItemsArrayCities;\n    console.log(arr);\n    return filtredItemsArrayCities.filter(cityData => {\n      // return cityData.city.toLowerCase().indexOf(searchValue.toLowerCase()) > -1;\n      let temp = cityData.city.toLowerCase().indexOf(searchValue.toLowerCase()) > -1;\n      console.log(cityData.city);\n\n      if (temp === true) {\n        arr.push(cityData.city);\n        return cityData.city.toLowerCase().indexOf(searchValue.toLowerCase()) > -1;\n      }\n    });\n  };\n\n  const visibleItem = searchItem(filtredItemsArrayCities, searchValue).map(dataCity => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: dataCity.city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }); // для градуса &deg;\n  // для иконки openweathermap.org/img/wn/${data.weather.icon}@2x.png путь \n\n  React.useEffect(() => {\n    try {\n      axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=54.983334&lon=73.366669&units=metric&appid=${process.env.REACT_APP_OPENWEATHER_KEY}`).then(res => setData(res.data));\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const onChangeSearchInput = e => {\n    setSearchValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: onChangeSearchInput,\n          className: \"searchInput\",\n          value: searchValue,\n          type: \"text\",\n          placeholder: \"\\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"searchResults \" + (searchValue !== '' ? \"visible\" : null),\n          children: searchValue && visibleItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3MjUFSsv9l2rr/d4JZ7R9W2+rGA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikitarukoleev/Desktop/app-weather/src/App.js"],"names":["React","axios","arrayItemsCities","App","data","setData","useState","searchValue","setSearchValue","filtredItemsArrayCities","filter","item","hasOwnProperty","searchItem","arr","length","console","log","cityData","temp","city","toLowerCase","indexOf","push","visibleItem","map","dataCity","useEffect","get","process","env","REACT_APP_OPENWEATHER_KEY","then","res","error","onChangeSearchInput","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AAEA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,KAAK,CAACM,QAAN,CAAe,EAAf,CAAtC;AAEA,QAAMG,uBAAuB,GAAGP,gBAAgB,CAACQ,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACC,cAAL,CAAoB,MAApB,CAAhC,CAAhC;;AAEA,QAAMC,UAAU,GAAG,CAACJ,uBAAD,EAA0BF,WAA1B,KAA0C;AAC3D,QAAIO,GAAG,GAAG,EAAV;AAEA,QAAIP,WAAW,CAACQ,MAAZ,KAAuB,CAA3B,EAA8B,OAAON,uBAAP;AAE9BO,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAEA,WAAOL,uBAAuB,CAACC,MAAxB,CAA+BQ,QAAQ,IAAI;AAChD;AACA,UAAIC,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcC,WAAd,GAA4BC,OAA5B,CAAoCf,WAAW,CAACc,WAAZ,EAApC,IAAiE,CAAC,CAA7E;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACE,IAArB;;AACA,UAAKD,IAAI,KAAK,IAAd,EAAqB;AACnBL,QAAAA,GAAG,CAACS,IAAJ,CAASL,QAAQ,CAACE,IAAlB;AACA,eAAOF,QAAQ,CAACE,IAAT,CAAcC,WAAd,GAA4BC,OAA5B,CAAoCf,WAAW,CAACc,WAAZ,EAApC,IAAiE,CAAC,CAAzE;AACD;AACF,KARM,CAAP;AAUD,GAjBD;;AAmBA,QAAMG,WAAW,GAAGX,UAAU,CAACJ,uBAAD,EAA0BF,WAA1B,CAAV,CAAiDkB,GAAjD,CAAqDC,QAAQ,IAAI;AACnF,wBACE;AAAA,gBAAMA,QAAQ,CAACN;AAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAJmB,CAApB,CAzBa,CA+Bb;AACA;;AAEApB,EAAAA,KAAK,CAAC2B,SAAN,CAAgB,MAAM;AACpB,QAAI;AACF1B,MAAAA,KAAK,CAAC2B,GAAN,CAAW,kGAAiGC,OAAO,CAACC,GAAR,CAAYC,yBAA0B,EAAlJ,EAAqJC,IAArJ,CAA0JC,GAAG,IAAI5B,OAAO,CAAC4B,GAAG,CAAC7B,IAAL,CAAxK;AACD,KAFD,CAEE,OAAM8B,KAAN,EAAa;AACblB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACD;AACF,GAND,EAMG,EANH;;AAQA,QAAMC,mBAAmB,GAAIC,CAAD,IAAO;AACjC5B,IAAAA,cAAc,CAAC4B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAO,UAAA,QAAQ,EAAEH,mBAAjB;AAAsC,UAAA,SAAS,EAAC,aAAhD;AAA8D,UAAA,KAAK,EAAE5B,WAArE;AAAkF,UAAA,IAAI,EAAC,MAAvF;AAA8F,UAAA,WAAW,EAAC;AAA1G;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAE,oBAAoBA,WAAW,KAAK,EAAhB,GAAqB,SAArB,GAAiC,IAArD,CAAf;AAAA,oBACIA,WAAW,IAAIiB;AADnB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA7DQrB,G;;KAAAA,G;AA+DT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport arrayItemsCities from './arrayItemsCities.json'\n\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = React.useState([]); \n  const [searchValue, setSearchValue] = React.useState(''); \n\n  const filtredItemsArrayCities = arrayItemsCities.filter(item => item.hasOwnProperty('city'));\n\n  const searchItem = (filtredItemsArrayCities, searchValue) => {\n    let arr = [];\n\n    if (searchValue.length === 0) return filtredItemsArrayCities;\n\n    console.log(arr);\n\n    return filtredItemsArrayCities.filter(cityData => {\n      // return cityData.city.toLowerCase().indexOf(searchValue.toLowerCase()) > -1;\n      let temp = cityData.city.toLowerCase().indexOf(searchValue.toLowerCase()) > -1;\n      console.log(cityData.city);\n      if ( temp === true ) {\n        arr.push(cityData.city);\n        return cityData.city.toLowerCase().indexOf(searchValue.toLowerCase()) > -1;\n      }\n    })\n\n  }\n\n  const visibleItem = searchItem(filtredItemsArrayCities, searchValue).map(dataCity => {\n    return (\n      <li>{ dataCity.city }</li> \n    )\n  })  \n\n  // для градуса &deg;\n  // для иконки openweathermap.org/img/wn/${data.weather.icon}@2x.png путь \n\n  React.useEffect(() => {\n    try {\n      axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=54.983334&lon=73.366669&units=metric&appid=${process.env.REACT_APP_OPENWEATHER_KEY}`).then(res => setData(res.data));\n    } catch(error) {\n      console.log(error);\n    }\n  }, [])\n\n  const onChangeSearchInput = (e) => {\n    setSearchValue(e.target.value)\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"searchBar\">\n          <input onChange={onChangeSearchInput} className=\"searchInput\" value={searchValue} type=\"text\" placeholder=\"введите город...\"/> \n          <ul className={\"searchResults \" + (searchValue !== '' ? \"visible\" : null)}>\n            { searchValue && visibleItem } \n          </ul>\n    \n        </div>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}