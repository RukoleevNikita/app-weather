{"ast":null,"code":"var _jsxFileName = \"/Users/nikitarukoleev/Desktop/app-weather/src/App.js\",\n    _s = $RefreshSig$();\n\n// сделать крестик\n// закрытие блока поиска при клике на другую область \nimport React from 'react';\nimport axios from 'axios';\nimport Header from './components/Header/Header';\nimport Main from './components/Main/Main';\nimport Footer from './components/Footer/Footer';\nimport DATA_CITIES from './arrayItemsCities.json';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [russianCitiesData, setRussianCitiesData] = React.useState([]);\n  const [dataWeatherCity, setDataWeatherCity] = React.useState({});\n  const [viewDataWeatherCity, setViewDataWeatherCity] = React.useState(false);\n  const [displaySearchResults, setDisplaySearchResults] = React.useState(false);\n  const [cityName, setCityName] = React.useState('');\n  const [searchValue, setSearchValue] = React.useState('');\n  const [directionWind, setDirectionWind] = React.useState('');\n  const filtredItemsArrayCities = DATA_CITIES.filter(item => item.hasOwnProperty('city'));\n\n  const filterCity = (searchText, listOfCity) => {\n    if (!searchText) {\n      setDisplaySearchResults(false);\n      return listOfCity;\n    }\n\n    return listOfCity.filter(_ref => {\n      let {\n        city\n      } = _ref;\n      return city.toLowerCase().includes(searchText.toLowerCase());\n    });\n  };\n\n  React.useEffect(() => {\n    const debounce = setTimeout(() => {\n      const filtredCity = filterCity(searchValue, filtredItemsArrayCities);\n      setRussianCitiesData(filtredCity);\n    }, 300);\n    return () => clearTimeout(debounce);\n  }, [searchValue]);\n\n  const getDataWeather = arrGeoPositionData => {\n    try {\n      axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${arrGeoPositionData[0]}&lon=${arrGeoPositionData[1]}&units=metric&lang=ru&appid=${process.env.REACT_APP_OPENWEATHER_KEY}`).then(res => {\n        setDataWeatherCity(res.data);\n        setViewDataWeatherCity(true);\n        directionDetermination(res.data.wind.deg);\n        console.log(res.data);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handlerClickOnCity = e => {\n    let cityName = e.target.textContent;\n    setCityName(cityName);\n    filtredItemsArrayCities.forEach((item, index) => {\n      if (cityName === item.city) {\n        getDataWeather([item.geo_lat, item.geo_lon]);\n      }\n    });\n    setSearchValue(cityName);\n    setDisplaySearchResults(false);\n  };\n\n  const onChangeSearchInput = e => {\n    setSearchValue(e.target.value);\n    setDisplaySearchResults(true);\n  };\n\n  const changeCity = () => {\n    setCityName(false);\n    setSearchValue('');\n    setViewDataWeatherCity(false);\n  };\n\n  const handlerCelsius = arg => {\n    console.log(arg);\n  };\n\n  const habdlerFahrenheit = arg => {\n    console.log(arg);\n  };\n\n  function directionDetermination(temp) {\n    //!!!!!!!!!\n    if (Number(temp) >= 191.25 && Number(temp) <= 236.25) setDirectionWind('юго-заподный');\n    if (Number(temp) >= 348.75 && Number(temp) <= 11.25) setDirectionWind('северный');\n    if (Number(temp) >= 11.25 && Number(temp) <= 78.75) setDirectionWind('северо-восточный');\n    if (Number(temp) >= 78.75 && Number(temp) <= 101.25) setDirectionWind('восточный');\n    if (Number(temp) >= 168.75 && Number(temp) <= 191.25) setDirectionWind('южный');\n    if (Number(temp) >= 281.25 && Number(temp) <= 348.75) setDirectionWind('северо-западный');\n    if (Number(temp) >= 258.75 && Number(temp) <= 281.25) setDirectionWind('западный');\n    if (Number(temp) >= 101.25 && Number(temp) <= 146.25) setDirectionWind('юго-восточный');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      cityName: cityName,\n      onChangeSearchInput: onChangeSearchInput,\n      searchValue: searchValue,\n      changeCity: changeCity,\n      displaySearchResults: displaySearchResults,\n      russianCitiesData: russianCitiesData,\n      handlerClickOnCity: handlerClickOnCity,\n      handlerCelsius: handlerCelsius,\n      habdlerFahrenheit: habdlerFahrenheit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      viewDataWeatherCity: viewDataWeatherCity,\n      dataWeatherCity: dataWeatherCity,\n      celsius: celsius,\n      celsius: celsius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      viewDataWeatherCity: viewDataWeatherCity,\n      dataWeatherCity: dataWeatherCity,\n      directionWind: directionWind\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YHwwasNHfcp2oH5HCvABQ0Cmbms=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikitarukoleev/Desktop/app-weather/src/App.js"],"names":["React","axios","Header","Main","Footer","DATA_CITIES","App","russianCitiesData","setRussianCitiesData","useState","dataWeatherCity","setDataWeatherCity","viewDataWeatherCity","setViewDataWeatherCity","displaySearchResults","setDisplaySearchResults","cityName","setCityName","searchValue","setSearchValue","directionWind","setDirectionWind","filtredItemsArrayCities","filter","item","hasOwnProperty","filterCity","searchText","listOfCity","city","toLowerCase","includes","useEffect","debounce","setTimeout","filtredCity","clearTimeout","getDataWeather","arrGeoPositionData","get","process","env","REACT_APP_OPENWEATHER_KEY","then","res","data","directionDetermination","wind","deg","console","log","error","handlerClickOnCity","e","target","textContent","forEach","index","geo_lat","geo_lon","onChangeSearchInput","value","changeCity","handlerCelsius","arg","habdlerFahrenheit","temp","Number","celsius"],"mappings":"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","sourcesContent":["// сделать крестик\n// закрытие блока поиска при клике на другую область \n\nimport React from 'react';\nimport axios from 'axios';\n\nimport Header from './components/Header/Header';\nimport Main from './components/Main/Main';\nimport Footer from './components/Footer/Footer';\n\nimport DATA_CITIES from './arrayItemsCities.json'\n\nimport './App.scss';\n\n\n\nfunction App() {\n  const [russianCitiesData, setRussianCitiesData] = React.useState([]); \n  const [dataWeatherCity, setDataWeatherCity] = React.useState({}); \n  const [viewDataWeatherCity, setViewDataWeatherCity] = React.useState(false); \n  const [displaySearchResults, setDisplaySearchResults] = React.useState(false);\n  const [cityName, setCityName] = React.useState('');\n  const [searchValue, setSearchValue] = React.useState(''); \n  const [directionWind, setDirectionWind] = React.useState('');\n\n\n  const filtredItemsArrayCities = DATA_CITIES.filter(item => item.hasOwnProperty('city'));\n\n  const filterCity = (searchText, listOfCity) => {\n    if (!searchText) {\n      setDisplaySearchResults(false);\n      return listOfCity;\n    }\n    \n    return listOfCity.filter(({ city }) => city.toLowerCase().includes(searchText.toLowerCase()));\n  }\n\n  React.useEffect(() => {\n    const debounce = setTimeout(() => {\n      const filtredCity = filterCity(searchValue, filtredItemsArrayCities);\n      setRussianCitiesData(filtredCity);\n    }, 300);\n\n    return () => clearTimeout(debounce)\n  }, [searchValue]);\n\n  const getDataWeather = (arrGeoPositionData) => {\n    try {\n      axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${arrGeoPositionData[0]}&lon=${arrGeoPositionData[1]}&units=metric&lang=ru&appid=${process.env.REACT_APP_OPENWEATHER_KEY}`).then(res => {\n        setDataWeatherCity(res.data);\n        setViewDataWeatherCity(true);\n        directionDetermination(res.data.wind.deg);\n        console.log(res.data);\n      });\n    } catch(error) {\n      console.log(error);\n    }\n  }\n\n  const handlerClickOnCity = (e) => {\n    let cityName = e.target.textContent;\n\n    setCityName(cityName);\n\n    filtredItemsArrayCities.forEach((item, index) => {\n      if (cityName === item.city) {\n        getDataWeather([item.geo_lat, item.geo_lon]);\n      }\n    }) \n\n    setSearchValue(cityName);\n    setDisplaySearchResults(false);\n  }\n\n  const onChangeSearchInput = (e) => {\n    setSearchValue(e.target.value);\n    setDisplaySearchResults(true);\n  }\n\n  const changeCity = () => {\n    setCityName(false);\n    setSearchValue('');\n    setViewDataWeatherCity(false);\n  }\n\n  const handlerCelsius = (arg) => {\n    console.log(arg);\n  }\n  const habdlerFahrenheit = (arg) => {\n    console.log(arg);\n  }\n  \n  function directionDetermination(temp) { //!!!!!!!!!\n    if ( Number(temp) >= 191.25  && Number(temp) <= 236.25 ) setDirectionWind('юго-заподный');\n    if ( Number(temp) >= 348.75  && Number(temp) <= 11.25 ) setDirectionWind('северный');\n    if ( Number(temp) >= 11.25 && Number(temp) <= 78.75 ) setDirectionWind('северо-восточный');\n    if ( Number(temp) >= 78.75  && Number(temp) <= 101.25 ) setDirectionWind('восточный');\n    if ( Number(temp) >= 168.75 && Number(temp) <= 191.25 ) setDirectionWind('южный');\n    if ( Number(temp) >= 281.25  && Number(temp) <= 348.75 ) setDirectionWind('северо-западный');\n    if ( Number(temp) >= 258.75  && Number(temp) <= 281.25 ) setDirectionWind('западный');\n    if ( Number(temp) >= 101.25  && Number(temp) <= 146.25 ) setDirectionWind('юго-восточный');\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Header\n        cityName={cityName}\n        onChangeSearchInput={onChangeSearchInput}\n        searchValue={searchValue}\n        changeCity={changeCity}\n        displaySearchResults={displaySearchResults}\n        russianCitiesData={russianCitiesData}\n        handlerClickOnCity={handlerClickOnCity}\n        handlerCelsius={handlerCelsius}\n        habdlerFahrenheit={habdlerFahrenheit}\n      />\n\n      <Main \n        viewDataWeatherCity={viewDataWeatherCity}\n        dataWeatherCity={dataWeatherCity}\n        celsius={celsius}\n        celsius={celsius}\n      />\n\n      <Footer \n        viewDataWeatherCity={viewDataWeatherCity}\n        dataWeatherCity={dataWeatherCity}\n        directionWind={directionWind}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}