{"ast":null,"code":"var _jsxFileName = \"/Users/nikitarukoleev/Desktop/app-weather/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport dataCity from './data.json';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = React.useState([]);\n  const [searchValue, setSearchValue] = React.useState(''); // const [itemsCity, setCity] = React.useState([...dataCity]); \n\n  const filtredCity = dataCity.filter(item => item.hasOwnProperty('city')); //  const filtredCity = dataCity.filter(element => {\n  //   // return element.city.toLowerCase().includes(searchValue.toLowerCase());\n  //   return console.log( element.city.toLowerCase().includes(searchValue.toLowerCase()))\n  // }) \n\n  const searchItem = (itemsCity, searchValue) => {\n    if (searchValue.length === 0) {\n      return itemsCity;\n    }\n\n    return itemsCity.filter(item => {\n      return item.city.toLowerCase().indexOf(searchValue.toLowerCase()) > -1;\n    });\n  };\n\n  const visibleItem = searchItem(itemsCity, searchValue).map(item => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: item.city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }); // city.forEach((e) => console.log(e.city))\n  // для градуса &deg;\n  // для иконки openweathermap.org/img/wn/${data.weather.icon}@2x.png путь \n  // const store = {\n  //   city: {\n  //   }\n  // }\n\n  React.useEffect(() => {\n    try {\n      axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=54.983334&lon=73.366669&units=metric&appid=${process.env.REACT_APP_OPENWEATHER_KEY}`).then(res => setData(res.data));\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const onChangeSearchInput = e => {\n    setSearchValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChangeSearchInput,\n        value: searchValue,\n        type: \"text\",\n        placeholder: \"\\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"blickSearch\",\n        children: visibleItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3MjUFSsv9l2rr/d4JZ7R9W2+rGA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikitarukoleev/Desktop/app-weather/src/App.js"],"names":["React","axios","dataCity","App","data","setData","useState","searchValue","setSearchValue","filtredCity","filter","item","hasOwnProperty","searchItem","itemsCity","length","city","toLowerCase","indexOf","visibleItem","map","useEffect","get","process","env","REACT_APP_OPENWEATHER_KEY","then","res","error","console","log","onChangeSearchInput","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAxB;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,KAAK,CAACM,QAAN,CAAe,EAAf,CAAtC,CAHa,CAIb;;AAEA,QAAMG,WAAW,GAAGP,QAAQ,CAACQ,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,cAAL,CAAoB,MAApB,CAAxB,CAApB,CANa,CAQb;AACA;AACA;AACA;;AAEA,QAAMC,UAAU,GAAG,CAACC,SAAD,EAAYP,WAAZ,KAA4B;AAC7C,QAAIA,WAAW,CAACQ,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,aAAOD,SAAP;AACD;;AAED,WAAOA,SAAS,CAACJ,MAAV,CAAiBC,IAAI,IAAI;AAC9B,aAAOA,IAAI,CAACK,IAAL,CAAUC,WAAV,GAAwBC,OAAxB,CAAgCX,WAAW,CAACU,WAAZ,EAAhC,IAA6D,CAAC,CAArE;AACD,KAFM,CAAP;AAGD,GARD;;AAUA,QAAME,WAAW,GAAGN,UAAU,CAACC,SAAD,EAAYP,WAAZ,CAAV,CAAmCa,GAAnC,CAAuCT,IAAI,IAAI;AACjE,wBACE;AAAA,gBAAKA,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAJmB,CAApB,CAvBa,CA6Bb;AAGA;AACA;AAEA;AACA;AAEA;AACA;;AAIAhB,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpB,QAAI;AACFpB,MAAAA,KAAK,CAACqB,GAAN,CAAW,kGAAiGC,OAAO,CAACC,GAAR,CAAYC,yBAA0B,EAAlJ,EAAqJC,IAArJ,CAA0JC,GAAG,IAAItB,OAAO,CAACsB,GAAG,CAACvB,IAAL,CAAxK;AACD,KAFD,CAEE,OAAMwB,KAAN,EAAa;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAND,EAMG,EANH;;AAQA,QAAMG,mBAAmB,GAAIC,CAAD,IAAO;AACjCxB,IAAAA,cAAc,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACF;AAAO,QAAA,QAAQ,EAAEH,mBAAjB;AAAuC,QAAA,KAAK,EAAExB,WAA9C;AAA2D,QAAA,IAAI,EAAC,MAAhE;AAAuE,QAAA,WAAW,EAAC;AAAnF;AAAA;AAAA;AAAA;AAAA,cADE,eAEF;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,kBACEY;AADF;AAAA;AAAA;AAAA;AAAA,cAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAlEQhB,G;;KAAAA,G;AAoET,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport dataCity from './data.json'\n\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = React.useState([]); \n\n  const [searchValue, setSearchValue] = React.useState(''); \n  // const [itemsCity, setCity] = React.useState([...dataCity]); \n\n  const filtredCity = dataCity.filter(item => item.hasOwnProperty('city'));\n\n  //  const filtredCity = dataCity.filter(element => {\n  //   // return element.city.toLowerCase().includes(searchValue.toLowerCase());\n  //   return console.log( element.city.toLowerCase().includes(searchValue.toLowerCase()))\n  // }) \n\n  const searchItem = (itemsCity, searchValue) => {\n    if (searchValue.length === 0) {\n      return itemsCity;\n    }\n\n    return itemsCity.filter(item => {\n      return item.city.toLowerCase().indexOf(searchValue.toLowerCase()) > -1;\n    })\n  }\n\n  const visibleItem = searchItem(itemsCity, searchValue).map(item => {\n    return (\n      <li>{item.city}</li>\n    )\n  })\n\n  // city.forEach((e) => console.log(e.city))\n  \n\n  // для градуса &deg;\n  // для иконки openweathermap.org/img/wn/${data.weather.icon}@2x.png путь \n\n  // const store = {\n  //   city: {\n\n  //   }\n  // }\n\n\n\n  React.useEffect(() => {\n    try {\n      axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=54.983334&lon=73.366669&units=metric&appid=${process.env.REACT_APP_OPENWEATHER_KEY}`).then(res => setData(res.data));\n    } catch(error) {\n      console.log(error);\n    }\n  }, [])\n\n  const onChangeSearchInput = (e) => {\n    setSearchValue(e.target.value)\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n    <input onChange={onChangeSearchInput}  value={searchValue} type=\"text\" placeholder=\"введите город...\"/> \n    <ul className=\"blickSearch\">\n    { visibleItem } \n    </ul>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}