{"ast":null,"code":"var _jsxFileName = \"/Users/nikitarukoleev/Desktop/app-weather/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport DATA_CITIES from './arrayItemsCities.json';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst filterCity = (searchText, listOfCity) => {\n  if (!searchText) return listOfCity;\n  return listOfCity.filter(_ref => {\n    let {\n      city\n    } = _ref;\n    return city.toLowerCase().includes(searchText.toLowerCase());\n  });\n};\n\nfunction App() {\n  _s();\n\n  const [data, setData] = React.useState(DATA_CITIES.filter(item => item.hasOwnProperty('city')));\n  const [searchValue, setSearchValue] = React.useState('');\n  React.useEffect(() => {\n    const debounce = setTimeout(() => {\n      const filtredCity = filterCity(searchValue, data);\n      setData(filtredCity);\n    }, 300);\n  }, [searchValue]);\n  /* реализация 1\n    const [data, setData] = React.useState([]); \n    onst filtredItemsArrayCities = DATA_CITIES.filter(item => item.hasOwnProperty('city'));\n   \n  const searchItem = (filtredItemsArrayCities, searchValue) => {\n    if (searchValue.length === 0) return filtredItemsArrayCities;\n     return filtredItemsArrayCities.filter(({ city }) => {\n      return city.toLowerCase().indexOf(searchValue.toLowerCase()) > -1;\n    })\n  }\n   const visibleItem = searchItem(filtredItemsArrayCities, searchValue).map(({ city }) => {\n    return ( \n      <li>{ city }</li> \n    )\n  })  \n  */\n  // для градуса &deg;\n  // для иконки openweathermap.org/img/wn/${data.weather.icon}@2x.png путь \n  // React.useEffect(() => {\n  //   try {\n  //     axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=54.983334&lon=73.366669&units=metric&appid=${process.env.REACT_APP_OPENWEATHER_KEY}`).then(res => setData(res.data));\n  //   } catch(error) {\n  //     console.log(error);\n  //   }\n  // }, [])\n\n  const onChangeSearchInput = e => {\n    setSearchValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: onChangeSearchInput,\n          className: \"searchInput\",\n          value: searchValue,\n          type: \"text\",\n          placeholder: \"\\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"searchResults \" + (searchValue !== '' ? \"visible\" : null),\n          children: searchValue && visibleItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nhHKLE09C//6XpAcdaH3jjUHBsM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikitarukoleev/Desktop/app-weather/src/App.js"],"names":["React","axios","DATA_CITIES","filterCity","searchText","listOfCity","filter","city","toLowerCase","includes","App","data","setData","useState","item","hasOwnProperty","searchValue","setSearchValue","useEffect","debounce","setTimeout","filtredCity","onChangeSearchInput","e","target","value","visibleItem"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,OAAO,WAAP;;;AAEA,MAAMC,UAAU,GAAG,CAACC,UAAD,EAAaC,UAAb,KAA4B;AAC7C,MAAI,CAACD,UAAL,EAAiB,OAAOC,UAAP;AAEjB,SAAOA,UAAU,CAACC,MAAX,CAAkB;AAAA,QAAC;AAAEC,MAAAA;AAAF,KAAD;AAAA,WAAcA,IAAI,CAACC,WAAL,GAAmBC,QAAnB,CAA4BL,UAAU,CAACI,WAAX,EAA5B,CAAd;AAAA,GAAlB,CAAP;AACD,CAJD;;AAQA,SAASE,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,KAAK,CAACa,QAAN,CAAeX,WAAW,CAACI,MAAZ,CAAmBQ,IAAI,IAAIA,IAAI,CAACC,cAAL,CAAoB,MAApB,CAA3B,CAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjB,KAAK,CAACa,QAAN,CAAe,EAAf,CAAtC;AAEAb,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpB,UAAMC,QAAQ,GAAGC,UAAU,CAAC,MAAM;AAChC,YAAMC,WAAW,GAAGlB,UAAU,CAACa,WAAD,EAAcL,IAAd,CAA9B;AACAC,MAAAA,OAAO,CAACS,WAAD,CAAP;AACD,KAH0B,EAGxB,GAHwB,CAA3B;AAKD,GAND,EAMG,CAACL,WAAD,CANH;AAYA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAME;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMM,mBAAmB,GAAIC,CAAD,IAAO;AACjCN,IAAAA,cAAc,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAO,UAAA,QAAQ,EAAEH,mBAAjB;AAAsC,UAAA,SAAS,EAAC,aAAhD;AAA8D,UAAA,KAAK,EAAEN,WAArE;AAAkF,UAAA,IAAI,EAAC,MAAvF;AAA8F,UAAA,WAAW,EAAC;AAA1G;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAE,oBAAoBA,WAAW,KAAK,EAAhB,GAAqB,SAArB,GAAiC,IAArD,CAAf;AAAA,oBACIA,WAAW,IAAIU;AADnB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAnEQhB,G;;KAAAA,G;AAqET,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport DATA_CITIES from './arrayItemsCities.json'\n\nimport './App.css';\n\nconst filterCity = (searchText, listOfCity) => {\n  if (!searchText) return listOfCity;\n\n  return listOfCity.filter(({ city }) => city.toLowerCase().includes(searchText.toLowerCase()));\n}\n\n\n\nfunction App() {\n  const [data, setData] = React.useState(DATA_CITIES.filter(item => item.hasOwnProperty('city'))); \n  const [searchValue, setSearchValue] = React.useState(''); \n\n  React.useEffect(() => {\n    const debounce = setTimeout(() => {\n      const filtredCity = filterCity(searchValue, data);\n      setData(filtredCity);\n    }, 300);\n    \n  }, [searchValue]);\n\n\n\n\n\n  /* реализация 1\n    const [data, setData] = React.useState([]); \n    onst filtredItemsArrayCities = DATA_CITIES.filter(item => item.hasOwnProperty('city'));\n   \n  const searchItem = (filtredItemsArrayCities, searchValue) => {\n    if (searchValue.length === 0) return filtredItemsArrayCities;\n\n    return filtredItemsArrayCities.filter(({ city }) => {\n      return city.toLowerCase().indexOf(searchValue.toLowerCase()) > -1;\n    })\n  }\n\n  const visibleItem = searchItem(filtredItemsArrayCities, searchValue).map(({ city }) => {\n    return ( \n      <li>{ city }</li> \n    )\n  })  \n  */\n\n\n\n  // для градуса &deg;\n  // для иконки openweathermap.org/img/wn/${data.weather.icon}@2x.png путь \n\n  // React.useEffect(() => {\n  //   try {\n  //     axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=54.983334&lon=73.366669&units=metric&appid=${process.env.REACT_APP_OPENWEATHER_KEY}`).then(res => setData(res.data));\n  //   } catch(error) {\n  //     console.log(error);\n  //   }\n  // }, [])\n\n  const onChangeSearchInput = (e) => {\n    setSearchValue(e.target.value)\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"searchBar\">\n          <input onChange={onChangeSearchInput} className=\"searchInput\" value={searchValue} type=\"text\" placeholder=\"введите город...\"/> \n          <ul className={\"searchResults \" + (searchValue !== '' ? \"visible\" : null)}>\n            { searchValue && visibleItem } \n          </ul>\n    \n        </div>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}