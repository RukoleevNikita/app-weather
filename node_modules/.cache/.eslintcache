[{"/Users/nikitarukoleev/Desktop/app-weather/src/index.js":"1","/Users/nikitarukoleev/Desktop/app-weather/src/App.js":"2","/Users/nikitarukoleev/Desktop/app-weather/src/components/Main/Main.jsx":"3","/Users/nikitarukoleev/Desktop/app-weather/src/components/Header/Header.jsx":"4","/Users/nikitarukoleev/Desktop/app-weather/src/components/Footer/Footer.jsx":"5"},{"size":219,"mtime":1644669794155,"results":"6","hashOfConfig":"7"},{"size":4555,"mtime":1645958552421,"results":"8","hashOfConfig":"7"},{"size":1366,"mtime":1646049666913,"results":"9","hashOfConfig":"7"},{"size":2708,"mtime":1646050878195,"results":"10","hashOfConfig":"7"},{"size":1115,"mtime":1646051222066,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"vz31mt",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nikitarukoleev/Desktop/app-weather/src/index.js",[],[],["31","32"],"/Users/nikitarukoleev/Desktop/app-weather/src/App.js",["33"],[],"// закрытие блока поиска при клике на другую область \n//! переписать directionDetermination\n// переключение на Фарингейт\n\nimport React from 'react';\nimport axios from 'axios';\n\nimport Header from './components/Header/Header';\nimport Main from './components/Main/Main';\nimport Footer from './components/Footer/Footer';\n\nimport DATA_CITIES from './arrayItemsCities.json'\n\nimport './App.scss';\n\nexport const TemperContext = React.createContext(); // контекст для Main \n\nfunction App() {\n  const [russianCitiesData, setRussianCitiesData] = React.useState([]); \n  const [dataWeatherCity, setDataWeatherCity] = React.useState({});\n  const [dropdownListOnInput, setDropdownListOnInput] = React.useState(false);\n  const [cityName, setCityName] = React.useState('');\n  const [searchValue, setSearchValue] = React.useState(''); \n  const [directionWind, setDirectionWind] = React.useState('');\n\n  const [tempFormatHandler, setTempFormatHandler] = React.useState(true); // флаг для показа Цельсия или Фаренгейта\n\n  const filtredItemsArrayCities = DATA_CITIES.filter(item => item.hasOwnProperty('city'));\n\n  const filterCity = (searchText, listOfCity) => {\n    if (!searchText) {\n      setDropdownListOnInput(false);\n      return listOfCity;\n    }\n    \n    return listOfCity.filter(({ city }) => city.toLowerCase().includes(searchText.toLowerCase()));\n  }\n\n  React.useEffect(() => {\n    const debounce = setTimeout(() => {\n      const filtredCity = filterCity(searchValue, filtredItemsArrayCities);\n      setRussianCitiesData(filtredCity);\n    }, 300);\n\n    return () => clearTimeout(debounce)\n  }, [searchValue]);\n\n  const getDataWeather = (arrGeoPositionData) => {\n    try {\n      axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${arrGeoPositionData[0]}&lon=${arrGeoPositionData[1]}&units=metric&lang=ru&appid=${process.env.REACT_APP_OPENWEATHER_KEY}`).then(res => {\n        setDataWeatherCity(res.data);\n        directionDetermination(res.data.wind.deg);\n        console.log(res.data);\n      });\n    } catch(error) {\n      console.log(error);\n    }\n  }\n\n  const handlerClickOnCity = (e) => {\n    let cityName = e.target.textContent;\n\n    setCityName(cityName);\n\n    filtredItemsArrayCities.forEach((item, index) => {\n      if (cityName === item.city) {\n        getDataWeather([item.geo_lat, item.geo_lon]);\n      }\n    }) \n\n    setSearchValue(cityName);\n    setDropdownListOnInput(false);\n  }\n\n  const onChangeSearchInput = (e) => {\n    setSearchValue(e.target.value);\n    setDropdownListOnInput(true);\n  }\n\n  const changeCity = () => {\n    setCityName(false);\n    setSearchValue('');\n    setDataWeatherCity({})\n  }\n\n  const toggleTempFormatHandler = () => setTempFormatHandler(prev => !prev); // смена стейта для переключателя \n  \n  function directionDetermination(temp) { //!!!!!!!!!\n    if ( Number(temp) >= 191.25  && Number(temp) <= 236.25 ) setDirectionWind('юго-заподный');\n    if ( Number(temp) >= 348.75  && Number(temp) <= 11.25 ) setDirectionWind('северный');\n    if ( Number(temp) >= 11.25 && Number(temp) <= 78.75 ) setDirectionWind('северо-восточный');\n    if ( Number(temp) >= 78.75  && Number(temp) <= 101.25 ) setDirectionWind('восточный');\n    if ( Number(temp) >= 168.75 && Number(temp) <= 191.25 ) setDirectionWind('южный');\n    if ( Number(temp) >= 281.25  && Number(temp) <= 348.75 ) setDirectionWind('северо-западный');\n    if ( Number(temp) >= 258.75  && Number(temp) <= 281.25 ) setDirectionWind('западный');\n    if ( Number(temp) >= 101.25  && Number(temp) <= 146.25 ) setDirectionWind('юго-восточный');\n  }\n\n\n  return (\n    <TemperContext.Provider value={tempFormatHandler}>\n      <div className=\"App\">\n        <Header\n          cityName={cityName}\n          onChangeSearchInput={onChangeSearchInput}\n          searchValue={searchValue}\n          changeCity={changeCity}\n          dropdownListOnInput={dropdownListOnInput} \n          russianCitiesData={russianCitiesData}\n          handlerClickOnCity={handlerClickOnCity}\n          setSearchValue={setSearchValue}\n          toggleTempFormatHandler={toggleTempFormatHandler}\n    \n        />\n\n        <Main \n          dataWeatherCity={dataWeatherCity}\n        />\n\n        <Footer \n          dataWeatherCity={dataWeatherCity}\n          directionWind={directionWind}\n        />\n      </div>\n    </TemperContext.Provider>\n  );\n}\n\nexport default App;\n",["34","35"],"/Users/nikitarukoleev/Desktop/app-weather/src/components/Main/Main.jsx",["36","37"],[],"import React from 'react';\n\nimport './Main.scss';\n\nimport {TemperContext} from '../../App';\nfunction Main({ dataWeatherCity }) {\n    const tempFormat = React.useContext(TemperContext);\n\n    // для иконки openweathermap.org/img/wn/${data.weather.icon}@2x.png \n\n    const [ link, setLink ]= React.useState('');\n    \n    return (\n        <main className=\"Main\">\n            { Object.keys(dataWeatherCity).length !== 0 ? \n                <div className=\"Main__data\">\n                    <div className='Main__wrapper'>\n                        <img src={`http://openweathermap.org/img/wn/${dataWeatherCity.weather[0].icon}@4x.png`} alt=\"img\"/>\n                        {\n                            tempFormat ? \n                                <div className=\"Main__data-temper\">{parseInt(dataWeatherCity.main.temp)}&deg;</div> \n                            : \n                                <div className=\"Main__data-temper\">{parseInt((dataWeatherCity.main.temp*1.8)+32)}</div> \n                        }   \n                    </div>\n                    <div className=\"Main__data-description\">{dataWeatherCity.weather[0].description}</div>       \n                </div>\n                :\n                <div>необходимо выбрать город</div>\n            }\n        </main>\n    );\n}\n\nexport default React.memo(Main);\n// export default Main;","/Users/nikitarukoleev/Desktop/app-weather/src/components/Header/Header.jsx",[],[],"/Users/nikitarukoleev/Desktop/app-weather/src/components/Footer/Footer.jsx",[],[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":46,"column":6,"nodeType":"44","endLine":46,"endColumn":19,"suggestions":"45"},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":11,"column":13,"nodeType":"50","messageId":"51","endLine":11,"endColumn":17},{"ruleId":"48","severity":1,"message":"52","line":11,"column":19,"nodeType":"50","messageId":"51","endLine":11,"endColumn":26},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'filtredItemsArrayCities'. Either include it or remove the dependency array.","ArrayExpression",["55"],["53"],["54"],"no-unused-vars","'link' is assigned a value but never used.","Identifier","unusedVar","'setLink' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [filtredItemsArrayCities, searchValue]",{"range":"58","text":"59"},[1586,1599],"[filtredItemsArrayCities, searchValue]"]